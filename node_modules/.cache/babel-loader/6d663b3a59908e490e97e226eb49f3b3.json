{"ast":null,"code":"import _objectSpread from \"/Users/asmith/Documents/web-dev-projects/hackernews/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/asmith/Documents/web-dev-projects/hackernews/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst DEFAULT_QUERY = 'redux';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: null,\n      searchTerm: DEFAULT_QUERY\n    };\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  setSearchTopStories(result) {\n    const hits = result.hits,\n          page = result.page;\n    const oldHits = page ? this.state.result.hits : [];\n    const updatedHits = [...oldHits, ...hits];\n    this.setState({\n      result: {\n        hits: updatedHits,\n        page\n      }\n    });\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    fetch(\"\".concat(PATH_BASE).concat(PATH_SEARCH, \"?\").concat(PARAM_SEARCH).concat(searchTerm, \"&&\").concat(PARAM_PAGE).concat(page)).then(response => response.json()).then(result => this.setSearchTopStories(result)).catch(error => error);\n  }\n\n  componentDidMount() {\n    const searchTerm = this.state.searchTerm;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  onSearchSubmit(event) {\n    const searchTerm = this.state.searchTerm;\n    this.fetchSearchTopStories(searchTerm);\n    event.preventDefault();\n  }\n\n  onDismiss(id) {\n    const updatedHits = this.state.result.hits.filter(item => item.objectID !== id);\n    this.setState({\n      result: _objectSpread({}, this.state.result, {\n        hits: updatedHits\n      })\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          result = _this$state.result,\n          searchTerm = _this$state.searchTerm;\n    const page = result && result.page || 0;\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Search, {\n      value: searchTerm,\n      onChange: this.onSearchChange,\n      onSubmit: this.onSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Search\")), result && React.createElement(Table, {\n      list: result.hits,\n      onDismiss: this.onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.fetchSearchTopStories(searchTerm, page + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"More\")));\n  }\n\n}\n\nconst Search = ({\n  value,\n  onChange,\n  onSubmit,\n  children\n}) => React.createElement(\"form\", {\n  onSubmit: onSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  value: value,\n  onChange: onChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, children));\n\nconst Table = ({\n  list,\n  onDismiss\n}) => React.createElement(\"div\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, list.map(item => React.createElement(\"div\", {\n  key: item.objectID,\n  className: \"table-row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  style: {\n    width: '40%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: item.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, item.title)), React.createElement(\"span\", {\n  style: {\n    width: '30%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}, item.author), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121\n  },\n  __self: this\n}, item.num_comments), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122\n  },\n  __self: this\n}, item.points), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: () => onDismiss(item.objectID),\n  className: \"button-inline\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}, \"Dismiss\")))));\n\nconst Button = ({\n  onClick,\n  className = '',\n  children\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  className: className,\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}, children);\n\nexport default App;","map":{"version":3,"sources":["/Users/asmith/Documents/web-dev-projects/hackernews/src/App.js"],"names":["React","Component","DEFAULT_QUERY","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","App","constructor","props","state","result","searchTerm","setSearchTopStories","bind","fetchSearchTopStories","onSearchChange","onSearchSubmit","onDismiss","hits","page","oldHits","updatedHits","setState","fetch","then","response","json","catch","error","componentDidMount","event","target","value","preventDefault","id","filter","item","objectID","render","Search","onChange","onSubmit","children","Table","list","map","width","url","title","author","num_comments","points","Button","onClick","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst DEFAULT_QUERY = 'redux';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result: null,\n      searchTerm: DEFAULT_QUERY,\n    };\n\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(\n      this,\n    );\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  setSearchTopStories(result) {\n    const { hits, page } = result;\n\n    const oldHits = page ? this.state.result.hits : [];\n\n    const updatedHits = [...oldHits, ...hits];\n\n    this.setState({\n      result: { hits: updatedHits, page },\n    });\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    fetch(\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&&${PARAM_PAGE}${page}`,\n    )\n      .then(response => response.json())\n      .then(result => this.setSearchTopStories(result))\n      .catch(error => error);\n  }\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onSearchSubmit(event) {\n    const { searchTerm } = this.state;\n    this.fetchSearchTopStories(searchTerm);\n    event.preventDefault();\n  }\n\n  onDismiss(id) {\n    const updatedHits = this.state.result.hits.filter(\n      item => item.objectID !== id,\n    );\n    this.setState({\n      result: { ...this.state.result, hits: updatedHits },\n    });\n  }\n\n  render() {\n    const { result, searchTerm } = this.state;\n    const page = (result && result.page) || 0;\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            Search\n          </Search>\n        </div>\n        {result && (\n          <Table list={result.hits} onDismiss={this.onDismiss} />\n        )}\n        <div className=\"interactions\">\n          <Button\n            onClick={() =>\n              this.fetchSearchTopStories(searchTerm, page + 1)\n            }\n          >\n            More\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Search = ({ value, onChange, onSubmit, children }) => (\n  <form onSubmit={onSubmit}>\n    <input type=\"text\" value={value} onChange={onChange} />\n    <button type=\"submit\">{children}</button>\n  </form>\n);\n\nconst Table = ({ list, onDismiss }) => (\n  <div className=\"table\">\n    {list.map(item => (\n      <div key={item.objectID} className=\"table-row\">\n        <span style={{ width: '40%' }}>\n          <a href={item.url}>{item.title}</a>\n        </span>\n        <span style={{ width: '30%' }}>{item.author}</span>\n        <span style={{ width: '10%' }}>{item.num_comments}</span>\n        <span style={{ width: '10%' }}>{item.points}</span>\n        <span style={{ width: '10%' }}>\n          <Button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            Dismiss\n          </Button>\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nconst Button = ({ onClick, className = '', children }) => (\n  <button onClick={onClick} className={className} type=\"button\">\n    {children}\n  </button>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}