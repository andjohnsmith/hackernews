{"ast":null,"code":"import _objectSpread from \"/Users/asmith/Documents/web-dev-projects/hackernews/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/asmith/Documents/web-dev-projects/hackernews/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '100';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n      error: null\n    };\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  needsToSearchTopStories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n\n  setSearchTopStories(result) {\n    const hits = result.hits,\n          page = result.page;\n    const _this$state = this.state,\n          searchKey = _this$state.searchKey,\n          results = _this$state.results;\n    const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [...oldHits, ...hits];\n    this.setState({\n      results: _objectSpread({}, results, {\n        [searchKey]: {\n          hits: updatedHits,\n          page\n        }\n      })\n    });\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    axios(\"\".concat(PATH_BASE).concat(PATH_SEARCH, \"?\").concat(PARAM_SEARCH).concat(searchTerm, \"&\").concat(PARAM_PAGE).concat(page, \"&\").concat(PARAM_HPP).concat(DEFAULT_HPP)).then(result => this.setSearchTopStories(result.data)).catch(error => this.setState({\n      error\n    }));\n  }\n\n  componentDidMount() {\n    const searchTerm = this.state.searchTerm;\n    this.setState({\n      searchKey: searchTerm\n    });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  onSearchSubmit(event) {\n    const searchTerm = this.state.searchTerm;\n    this.setState({\n      searchKey: searchTerm\n    });\n\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n\n    event.preventDefault();\n  }\n\n  onDismiss(id) {\n    const _this$state2 = this.state,\n          searchKey = _this$state2.searchKey,\n          results = _this$state2.results;\n    const _results$searchKey = results[searchKey],\n          hits = _results$searchKey.hits,\n          page = _results$searchKey.page;\n\n    const isNotId = item => item.objectID !== id;\n\n    const updatedHits = hits.filter(isNotId);\n    this.setState({\n      results: _objectSpread({}, results, {\n        [searchKey]: {\n          hits: updatedHits,\n          page\n        }\n      })\n    });\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          searchTerm = _this$state3.searchTerm,\n          results = _this$state3.results,\n          searchKey = _this$state3.searchKey,\n          error = _this$state3.error;\n    const page = results && results[searchKey] && results[searchKey].page || 0;\n    const list = results && results[searchKey] && results[searchKey].hits || [];\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Search, {\n      value: searchTerm,\n      onChange: this.onSearchChange,\n      onSubmit: this.onSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Search\")), error ? React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Something went wrong.\")) : React.createElement(Table, {\n      list: list,\n      onDismiss: this.onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.fetchSearchTopStories(searchKey, page + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"More\")));\n  }\n\n}\n\nconst Search = ({\n  value,\n  onChange,\n  onSubmit,\n  children\n}) => React.createElement(\"form\", {\n  onSubmit: onSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  value: value,\n  onChange: onChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n}, children));\n\nconst Table = ({\n  list,\n  onDismiss\n}) => React.createElement(\"div\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}, list.map(item => React.createElement(\"div\", {\n  key: item.objectID,\n  className: \"table-row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  style: {\n    width: '40%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 148\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: item.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n}, item.title)), React.createElement(\"span\", {\n  style: {\n    width: '30%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, item.author), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}, item.num_comments), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n}, item.points), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: () => onDismiss(item.objectID),\n  className: \"button-inline\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, \"Dismiss\")))));\n\nconst Button = ({\n  onClick,\n  className = '',\n  children\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  className: className,\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 168\n  },\n  __self: this\n}, children);\n\nexport default App;","map":{"version":3,"sources":["/Users/asmith/Documents/web-dev-projects/hackernews/src/App.js"],"names":["React","Component","axios","DEFAULT_QUERY","DEFAULT_HPP","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","PARAM_HPP","App","constructor","props","state","results","searchKey","searchTerm","error","needsToSearchTopStories","bind","setSearchTopStories","fetchSearchTopStories","onSearchChange","onSearchSubmit","onDismiss","result","hits","page","oldHits","updatedHits","setState","then","data","catch","componentDidMount","event","target","value","preventDefault","id","isNotId","item","objectID","filter","render","list","Search","onChange","onSubmit","children","Table","map","width","url","title","author","num_comments","points","Button","onClick","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '100';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n      error: null,\n    };\n\n    this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  needsToSearchTopStories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n\n  setSearchTopStories(result) {\n    const { hits, page } = result;\n    const { searchKey, results } = this.state;\n\n    const oldHits =\n      results && results[searchKey] ? results[searchKey].hits : [];\n\n    const updatedHits = [...oldHits, ...hits];\n\n    this.setState({\n      results: {\n        ...results,\n        [searchKey]: { hits: updatedHits, page },\n      },\n    });\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    axios(\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`,\n    )\n      .then(result => this.setSearchTopStories(result.data))\n      .catch(error => this.setState({ error }));\n  }\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onSearchSubmit(event) {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n\n    event.preventDefault();\n  }\n\n  onDismiss(id) {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n\n    this.setState({\n      results: {\n        ...results,\n        [searchKey]: { hits: updatedHits, page },\n      },\n    });\n  }\n\n  render() {\n    const { searchTerm, results, searchKey, error } = this.state;\n\n    const page =\n      (results && results[searchKey] && results[searchKey].page) || 0;\n\n    const list =\n      (results && results[searchKey] && results[searchKey].hits) || [];\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            Search\n          </Search>\n        </div>\n        {error ? (\n          <div className=\"interactions\">\n            <p>Something went wrong.</p>\n          </div>\n        ) : (\n          <Table list={list} onDismiss={this.onDismiss} />\n        )}\n        <div className=\"interactions\">\n          <Button\n            onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}\n          >\n            More\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Search = ({ value, onChange, onSubmit, children }) => (\n  <form onSubmit={onSubmit}>\n    <input type=\"text\" value={value} onChange={onChange} />\n    <button type=\"submit\">{children}</button>\n  </form>\n);\n\nconst Table = ({ list, onDismiss }) => (\n  <div className=\"table\">\n    {list.map(item => (\n      <div key={item.objectID} className=\"table-row\">\n        <span style={{ width: '40%' }}>\n          <a href={item.url}>{item.title}</a>\n        </span>\n        <span style={{ width: '30%' }}>{item.author}</span>\n        <span style={{ width: '10%' }}>{item.num_comments}</span>\n        <span style={{ width: '10%' }}>{item.points}</span>\n        <span style={{ width: '10%' }}>\n          <Button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            Dismiss\n          </Button>\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nconst Button = ({ onClick, className = '', children }) => (\n  <button onClick={onClick} className={className} type=\"button\">\n    {children}\n  </button>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}