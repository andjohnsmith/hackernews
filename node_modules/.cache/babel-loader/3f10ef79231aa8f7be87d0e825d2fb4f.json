{"ast":null,"code":"import _objectSpread from \"/Users/asmith/Documents/web-dev-projects/hackernews/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/asmith/Documents/web-dev-projects/hackernews/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst DEFAULT_QUERY = 'redux';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\n\nconst isSearched = searchTerm => item => item.title.toLowerCase().includes(searchTerm.toLowerCase());\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: null,\n      searchTerm: DEFAULT_QUERY\n    };\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n  }\n\n  setSearchTopStories(result) {\n    this.setState({\n      result\n    });\n  }\n\n  fetchSearchTopStories(searchTerm) {\n    fetch(\"\".concat(PATH_BASE).concat(PATH_SEARCH, \"?\").concat(PARAM_SEARCH).concat(searchTerm)).then(response => response.json()).then(result => this.setSearchTopStories(result)).catch(error => error);\n  }\n\n  componentDidMount() {\n    const searchTerm = this.state.searchTerm;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onDismiss(id) {\n    const updatedHits = this.state.result.hits.filter(item => item.objectID !== id);\n    this.setState({\n      result: _objectSpread({}, this.state.result, {\n        hits: updatedHits\n      })\n    });\n  }\n\n  onSearchSubmit() {\n    const searchTerm = this.state.searchTerm;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          result = _this$state.result,\n          searchTerm = _this$state.searchTerm;\n    if (!result) return null;\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Search, {\n      value: searchTerm,\n      onChange: this.onSearchChange,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Search\")), result && React.createElement(Table, {\n      list: result.hits,\n      pattern: searchTerm,\n      onDismiss: this.onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Search = ({\n  value,\n  onChange,\n  onSubmit,\n  children\n}) => React.createElement(\"form\", {\n  onSubmit: onSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  value: value,\n  onChange: onChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, children));\n\nconst Table = ({\n  list,\n  pattern,\n  onDismiss\n}) => React.createElement(\"div\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, list.filter(isSearched(pattern)).map(item => React.createElement(\"div\", {\n  key: item.objectID,\n  className: \"table-row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  style: {\n    width: '40%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: item.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, item.title)), React.createElement(\"span\", {\n  style: {\n    width: '30%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, item.author), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, item.num_comments), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}, item.points), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: () => onDismiss(item.objectID),\n  className: \"button-inline\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}, \"Dismiss\")))));\n\nconst Button = ({\n  onClick,\n  className = '',\n  children\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  className: className,\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121\n  },\n  __self: this\n}, children);\n\nexport default App;","map":{"version":3,"sources":["/Users/asmith/Documents/web-dev-projects/hackernews/src/App.js"],"names":["React","Component","DEFAULT_QUERY","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","isSearched","searchTerm","item","title","toLowerCase","includes","App","constructor","props","state","result","setSearchTopStories","bind","onDismiss","onSearchSubmit","onSearchChange","setState","fetchSearchTopStories","fetch","then","response","json","catch","error","componentDidMount","id","updatedHits","hits","filter","objectID","event","target","value","render","onSubmit","Search","onChange","children","Table","list","pattern","map","width","url","author","num_comments","points","Button","onClick","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst DEFAULT_QUERY = 'redux';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\n\nconst isSearched = searchTerm => item =>\n  item.title.toLowerCase().includes(searchTerm.toLowerCase());\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result: null,\n      searchTerm: DEFAULT_QUERY,\n    };\n\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n  }\n\n  setSearchTopStories(result) {\n    this.setState({ result });\n  }\n\n  fetchSearchTopStories(searchTerm) {\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}`)\n      .then(response => response.json())\n      .then(result => this.setSearchTopStories(result))\n      .catch(error => error);\n  }\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onDismiss(id) {\n    const updatedHits = this.state.result.hits.filter(\n      item => item.objectID !== id,\n    );\n    this.setState({\n      result: { ...this.state.result, hits: updatedHits },\n    });\n  }\n\n  onSearchSubmit() {\n    const { searchTerm } = this.state;\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  render() {\n    const { result, searchTerm } = this.state;\n\n    if (!result) return null;\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSubmit}\n          >\n            Search\n          </Search>\n        </div>\n        {result && (\n          <Table\n            list={result.hits}\n            pattern={searchTerm}\n            onDismiss={this.onDismiss}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst Search = ({ value, onChange, onSubmit, children }) => (\n  <form onSubmit={onSubmit}>\n    <input type=\"text\" value={value} onChange={onChange} />\n    <button type=\"submit\">{children}</button>\n  </form>\n);\n\nconst Table = ({ list, pattern, onDismiss }) => (\n  <div className=\"table\">\n    {list.filter(isSearched(pattern)).map(item => (\n      <div key={item.objectID} className=\"table-row\">\n        <span style={{ width: '40%' }}>\n          <a href={item.url}>{item.title}</a>\n        </span>\n        <span style={{ width: '30%' }}>{item.author}</span>\n        <span style={{ width: '10%' }}>{item.num_comments}</span>\n        <span style={{ width: '10%' }}>{item.points}</span>\n        <span style={{ width: '10%' }}>\n          <Button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            Dismiss\n          </Button>\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nconst Button = ({ onClick, className = '', children }) => (\n  <button onClick={onClick} className={className} type=\"button\">\n    {children}\n  </button>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}