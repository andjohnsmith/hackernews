{"ast":null,"code":"import _objectSpread from \"/Users/asmith/Documents/web-dev-projects/hackernews/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/asmith/Documents/web-dev-projects/hackernews/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '100';\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY\n    };\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  setSearchTopStories(result) {\n    const hits = result.hits,\n          page = result.page;\n    const _this$state = this.state,\n          searchKey = _this$state.searchKey,\n          results = _this$state.results;\n    const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [...oldHits, ...hits];\n    this.setState({\n      results: _objectSpread({}, results, {\n        [searchKey]: {\n          hits: updatedHits,\n          page\n        }\n      })\n    });\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    fetch(\"\".concat(PATH_BASE).concat(PATH_SEARCH, \"?\").concat(PARAM_SEARCH).concat(searchTerm, \"&\").concat(PARAM_PAGE).concat(page, \"&\").concat(PARAM_HPP).concat(DEFAULT_HPP)).then(response => response.json()).then(result => this.setSearchTopStories(result)).catch(error => error);\n  }\n\n  componentDidMount() {\n    const searchTerm = this.state.searchTerm;\n    this.setState({\n      searchKey: searchTerm\n    });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  onSearchSubmit(event) {\n    const searchTerm = this.state.searchTerm;\n    this.setState({\n      searchKey: searchTerm\n    });\n    this.fetchSearchTopStories(searchTerm);\n    event.preventDefault();\n  }\n\n  onDismiss(id) {\n    const updatedHits = this.state.result.hits.filter(item => item.objectID !== id);\n    this.setState({\n      result: _objectSpread({}, this.state.result, {\n        hits: updatedHits\n      })\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          searchTerm = _this$state2.searchTerm,\n          results = _this$state2.results,\n          searchKey = _this$state2.searchKey;\n    const page = results && results[searchKey] && results[searchKey].page || 0;\n    const list = results && results[searchKey] && results[searchKey].hits || [];\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Search, {\n      value: searchTerm,\n      onChange: this.onSearchChange,\n      onSubmit: this.onSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Search\")), result && React.createElement(Table, {\n      list: result.hits,\n      onDismiss: this.onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"interactions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.fetchSearchTopStories(searchTerm, page + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"More\")));\n  }\n\n}\n\nconst Search = ({\n  value,\n  onChange,\n  onSubmit,\n  children\n}) => React.createElement(\"form\", {\n  onSubmit: onSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"text\",\n  value: value,\n  onChange: onChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125\n  },\n  __self: this\n}, children));\n\nconst Table = ({\n  list,\n  onDismiss\n}) => React.createElement(\"div\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, list.map(item => React.createElement(\"div\", {\n  key: item.objectID,\n  className: \"table-row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  style: {\n    width: '40%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: item.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}, item.title)), React.createElement(\"span\", {\n  style: {\n    width: '30%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}, item.author), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}, item.num_comments), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}, item.points), React.createElement(\"span\", {\n  style: {\n    width: '10%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: () => onDismiss(item.objectID),\n  className: \"button-inline\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n}, \"Dismiss\")))));\n\nconst Button = ({\n  onClick,\n  className = '',\n  children\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  className: className,\n  type: \"button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n}, children);\n\nexport default App;","map":{"version":3,"sources":["/Users/asmith/Documents/web-dev-projects/hackernews/src/App.js"],"names":["React","Component","DEFAULT_QUERY","DEFAULT_HPP","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","PARAM_HPP","App","constructor","props","state","results","searchKey","searchTerm","setSearchTopStories","bind","fetchSearchTopStories","onSearchChange","onSearchSubmit","onDismiss","result","hits","page","oldHits","updatedHits","setState","fetch","then","response","json","catch","error","componentDidMount","event","target","value","preventDefault","id","filter","item","objectID","render","list","Search","onChange","onSubmit","children","Table","map","width","url","title","author","num_comments","points","Button","onClick","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '100';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n    };\n\n    this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    this.fetchSearchTopStories = this.fetchSearchTopStories.bind(\n      this,\n    );\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  setSearchTopStories(result) {\n    const { hits, page } = result;\n    const { searchKey, results } = this.state;\n\n    const oldHits =\n      results && results[searchKey] ? results[searchKey].hits : [];\n\n    const updatedHits = [...oldHits, ...hits];\n\n    this.setState({\n      results: {\n        ...results,\n        [searchKey]: { hits: updatedHits, page },\n      },\n    });\n  }\n\n  fetchSearchTopStories(searchTerm, page = 0) {\n    fetch(\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`,\n    )\n      .then(response => response.json())\n      .then(result => this.setSearchTopStories(result))\n      .catch(error => error);\n  }\n\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  onSearchSubmit(event) {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopStories(searchTerm);\n    event.preventDefault();\n  }\n\n  onDismiss(id) {\n    const updatedHits = this.state.result.hits.filter(\n      item => item.objectID !== id,\n    );\n    this.setState({\n      result: { ...this.state.result, hits: updatedHits },\n    });\n  }\n\n  render() {\n    const { searchTerm, results, searchKey } = this.state;\n\n    const page =\n      (results && results[searchKey] && results[searchKey].page) || 0;\n\n    const list =\n      (results && results[searchKey] && results[searchKey].hits) ||\n      [];\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            Search\n          </Search>\n        </div>\n        {result && (\n          <Table list={result.hits} onDismiss={this.onDismiss} />\n        )}\n        <div className=\"interactions\">\n          <Button\n            onClick={() =>\n              this.fetchSearchTopStories(searchTerm, page + 1)\n            }\n          >\n            More\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Search = ({ value, onChange, onSubmit, children }) => (\n  <form onSubmit={onSubmit}>\n    <input type=\"text\" value={value} onChange={onChange} />\n    <button type=\"submit\">{children}</button>\n  </form>\n);\n\nconst Table = ({ list, onDismiss }) => (\n  <div className=\"table\">\n    {list.map(item => (\n      <div key={item.objectID} className=\"table-row\">\n        <span style={{ width: '40%' }}>\n          <a href={item.url}>{item.title}</a>\n        </span>\n        <span style={{ width: '30%' }}>{item.author}</span>\n        <span style={{ width: '10%' }}>{item.num_comments}</span>\n        <span style={{ width: '10%' }}>{item.points}</span>\n        <span style={{ width: '10%' }}>\n          <Button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            Dismiss\n          </Button>\n        </span>\n      </div>\n    ))}\n  </div>\n);\n\nconst Button = ({ onClick, className = '', children }) => (\n  <button onClick={onClick} className={className} type=\"button\">\n    {children}\n  </button>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}